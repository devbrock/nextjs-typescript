import Head from "next/head";
import Image from 'next/image'
import { useState } from "react";
import Film from "../components/Film";
import Homeworld from "../components/Homeworld";
import Vehicles from "../components/Vehicles";

// write the type for our character
type Character = {
  name: string;
  height: string;
  mass: string;
  hair_color: string;
  skin_color: string;
  eye_color: string;
  birth_year: string;
  gender: string;
  homeworld: string;
  films: string[];
  species: string[];
  vehicles: string[];
  starships: string[];
  created: string;
  edited: string;
  url: string;
  image: string;
};

// write the type for our props
type CharacterProps = {
  characters: Character[];
};

let listOfCharacters : {name: string, url: string}[] = [
  {name: "Luke Skywalker", url: "https://swapi.dev/api/people/1/"},
  {name: "C-3P0", url: "https://swapi.dev/api/people/2/"},
  {name: "Darth Vader", url: "https://swapi.dev/api/people/4/"},
  {name: "Obi-Wan Kenobi", url: "https://swapi.dev/api/people/10/"},
]

export default function Home({ characters }: CharacterProps) {
  const [selectedCharacter, setSelectedCharacter] = useState<Character>()
  console.log(characters);


  async function handleClick(character: {name: string, url: string}) {
    let res = await fetch(character.url)
    let data: Character = await res.json();
    let id = character.url.substring(0, character.url.length - 1).split("/").pop()
    data.image = `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`
    console.log(data);
    setSelectedCharacter(data)
  }

  // type our props
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container-xl min-h-screen bg-white mx-auto p-16 text-black">
        <h1 className="font-bold text-4xl text-center">
          Star Wars + Next.js + Typescript! ðŸ”¥
        </h1>
        <div className="py-8">
          <ul className='flex space-x-4 justify-center'>
            {characters.map(character => (
              <li className="px-2 py-4 cursor-pointer bg-red-500 hover:bg-red-600 text-white font-semibold  rounded shadow" key={character.name} onClick={() => handleClick(character)}>
                {character.name}
                </li>
            ))}
          </ul>
        </div>
        {selectedCharacter !== undefined && 
        <div className="py-8 grid grid-cols-2">
          {/* pass our character data from the props as we normally would */}
          <div>
            <h2 className="font-semibold text-2xl">{selectedCharacter.name}</h2>
            <div className="my-8">
            <Image src={selectedCharacter.image} width={400} height={550}/>
            </div>
          </div>

          {/* example of passing data to a component */}
          <div>
            <p className="font-mono font-semibold text-xl pt-4">Home World</p>
            <Homeworld worldUrl={selectedCharacter.homeworld} />
            {/* example of mapping over an array and returning multiple components */}
            <p className="font-mono font-semibold text-xl pt-4">Films</p>
            {selectedCharacter.films.map((film, index) => (
              <Film key={index} url={film} />
            ))}
            {/* example of passing an array through props */}
            {selectedCharacter.vehicles.length > 0 && (
              <>
                <p className="font-mono font-semibold text-xl pt-4">Vehicles</p>
                <Vehicles vehicleUrls={selectedCharacter.vehicles} />
              </>
            )}
          </div>
        </div>
}
      </main>
    </div>
  );
}

export async function getStaticProps() {
  // normal fetch request
  let res = await fetch("https://swapi.dev/api/people/");
  // type the response json object as type Character
  let data = await res.json();
  let characters: Character[] = data.results;

  return {
    props: { characters }, // will be passed to the page component as props
  };
}
